{"version":3,"sources":["../../src/datasource-zabbix/add-metric-function.directive.js"],"names":[],"mappings":";;;;;AAiFA,WAAS,mBAAT,CAA6B,UAA7B,EAAyC;AACvC,WAAO,EAAE,MAAF,CAAS,UAAT,EAAqB,UAAS,IAAT,EAAe,QAAf,EAAyB;AACnD,QAAE,IAAF,CAAO,QAAP,EAAiB,UAAS,IAAT,EAAe;AAC9B,aAAK,IAAL,CAAU,KAAK,IAAf;AACD,OAFD;AAGA,aAAO,IAAP;AACD,KALM,EAKJ,EALI,CAAP;AAMD;;AAED,WAAS,0BAAT,CAAoC,UAApC,EAAgD;AAC9C,WAAO,EAAE,GAAF,CAAM,UAAN,EAAkB,UAAS,IAAT,EAAe,QAAf,EAAyB;AAChD,aAAO;AACL,cAAM,QADD;AAEL,iBAAS,EAAE,GAAF,CAAM,IAAN,EAAY,UAAS,KAAT,EAAgB;AACnC,iBAAO;AACL,kBAAM,MAAM,IADP;AAEL,mBAAO,uBAAuB,MAAM,IAA7B,GAAoC;AAFtC,WAAP;AAID,SALQ;AAFJ,OAAP;AASD,KAVM,CAAP;AAWD;;;AAtGM,a;;AACA,O;;AACA,O;;AACK,qB;;;;;AAGZ,cACG,MADH,CACU,oBADV,EAEG,SAFH,CAEa,mBAFb,EAEkC,UAAS,QAAT,EAAmB;AACjD,YAAI,gBAAgB,uBACE,wBADF,GAEE,mDAFtB;;AAIA,YAAI,iBAAiB,yEACG,kEADH,GAEG,gCAFxB;;AAIA,eAAO;AACL,gBAAM,cAAS,MAAT,EAAiB,IAAjB,EAAuB;AAC3B,gBAAI,aAAa,gBAAgB,aAAhB,EAAjB;AACA,gBAAI,eAAe,oBAAoB,UAApB,CAAnB;;AAEA,mBAAO,YAAP,GAAsB,2BAA2B,UAA3B,CAAtB;;AAEA,gBAAI,SAAS,EAAE,aAAF,CAAb;AACA,gBAAI,UAAU,EAAE,cAAF,CAAd;AACA,mBAAO,QAAP,CAAgB,IAAhB;AACA,oBAAQ,QAAR,CAAiB,IAAjB;;AAEA,mBAAO,IAAP,CAAY,cAAZ,EAA4B,WAA5B;AACA,mBAAO,SAAP,CAAiB;AACf,sBAAQ,YADO;AAEf,yBAAW,CAFI;AAGf,qBAAO,EAHQ;AAIf,uBAAS,iBAAU,KAAV,EAAiB;AACxB,oBAAI,UAAU,gBAAgB,UAAhB,CAA2B,KAA3B,CAAd;AACA,oBAAI,CAAC,OAAL,EAAc;;AAEZ,0BAAQ,MAAM,WAAN,EAAR;AACA,4BAAU,EAAE,IAAF,CAAO,YAAP,EAAqB,UAAS,QAAT,EAAmB;AAChD,2BAAO,SAAS,WAAT,GAAuB,OAAvB,CAA+B,KAA/B,MAA0C,CAAjD;AACD,mBAFS,CAAV;;AAIA,sBAAI,CAAC,OAAL,EAAc;AAAE;AAAS;AAC1B;;AAED,uBAAO,MAAP,CAAc,YAAW;AACvB,yBAAO,WAAP,CAAmB,OAAnB;AACD,iBAFD;;AAIA,uBAAO,OAAP,CAAe,MAAf;AACA,uBAAO,EAAP;AACD;AAtBc,aAAjB;;AAyBA,oBAAQ,KAAR,CAAc,YAAW;AACvB,sBAAQ,IAAR;AACA,qBAAO,IAAP;AACA,qBAAO,KAAP;AACD,aAJD;;AAMA,mBAAO,KAAP,CAAa,YAAW;AACtB,mBAAK,WAAL,CAAiB,MAAjB,EAAyB,OAAO,GAAP,OAAiB,EAA1C;AACD,aAFD;;AAIA,mBAAO,IAAP,CAAY,YAAW;;;AAGrB,yBAAW,YAAW;AACpB,uBAAO,GAAP,CAAW,EAAX;AACA,uBAAO,IAAP;AACA,wBAAQ,IAAR;AACA,qBAAK,WAAL,CAAiB,MAAjB;AACD,eALD,EAKG,GALH;AAMD,aATD;;AAWA,qBAAS,KAAK,QAAL,EAAT,EAA0B,MAA1B;AACD;AA5DI,SAAP;AA8DD,OAzEH","file":"add-metric-function.directive.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport * as metricFunctions from './metricFunctions';\n\n/** @ngInject */\nangular\n  .module('grafana.directives')\n  .directive('addMetricFunction', function($compile) {\n    var inputTemplate = '<input type=\"text\"'+\n                          ' class=\"gf-form-input\"' +\n                          ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    var buttonTemplate = '<a  class=\"gf-form-label tight-form-func dropdown-toggle query-part\"' +\n                            ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n                            '<i class=\"fa fa-plus\"></i></a>';\n\n    return {\n      link: function($scope, elem) {\n        var categories = metricFunctions.getCategories();\n        var allFunctions = getAllFunctionNames(categories);\n\n        $scope.functionMenu = createFunctionDropDownMenu(categories);\n\n        var $input = $(inputTemplate);\n        var $button = $(buttonTemplate);\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: function (value) {\n            var funcDef = metricFunctions.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, function(funcName) {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) { return; }\n            }\n\n            $scope.$apply(function() {\n              $scope.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          }\n        });\n\n        $button.click(function() {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(function() {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(function() {\n          // clicking the function dropdown menu wont\n          // work if you remove class at once\n          setTimeout(function() {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n\nfunction getAllFunctionNames(categories) {\n  return _.reduce(categories, function(list, category) {\n    _.each(category, function(func) {\n      list.push(func.name);\n    });\n    return list;\n  }, []);\n}\n\nfunction createFunctionDropDownMenu(categories) {\n  return _.map(categories, function(list, category) {\n    return {\n      text: category,\n      submenu: _.map(list, function(value) {\n        return {\n          text: value.name,\n          click: \"ctrl.addFunction('\" + value.name + \"')\",\n        };\n      })\n    };\n  });\n}\n\n"]}