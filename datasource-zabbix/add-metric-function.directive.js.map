{"version":3,"sources":["../../src/datasource-zabbix/add-metric-function.directive.js"],"names":[],"mappings":"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","file":"add-metric-function.directive.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport $ from 'jquery';\nimport * as metricFunctions from './metricFunctions';\n\n/** @ngInject */\nangular\n  .module('grafana.directives')\n  .directive('addMetricFunction', function($compile) {\n    var inputTemplate = '<input type=\"text\"'+\n                          ' class=\"tight-form-input input-medium tight-form-input\"' +\n                          ' spellcheck=\"false\" style=\"display:none\"></input>';\n\n    var buttonTemplate = '<a  class=\"tight-form-item tight-form-func dropdown-toggle\"' +\n                            ' tabindex=\"1\" gf-dropdown=\"functionMenu\" data-toggle=\"dropdown\">' +\n                            '<i class=\"fa fa-plus\"></i></a>';\n\n    return {\n      link: function($scope, elem) {\n        var categories = metricFunctions.getCategories();\n        var allFunctions = getAllFunctionNames(categories);\n\n        $scope.functionMenu = createFunctionDropDownMenu(categories);\n\n        var $input = $(inputTemplate);\n        var $button = $(buttonTemplate);\n        $input.appendTo(elem);\n        $button.appendTo(elem);\n\n        $input.attr('data-provide', 'typeahead');\n        $input.typeahead({\n          source: allFunctions,\n          minLength: 1,\n          items: 10,\n          updater: function (value) {\n            var funcDef = metricFunctions.getFuncDef(value);\n            if (!funcDef) {\n              // try find close match\n              value = value.toLowerCase();\n              funcDef = _.find(allFunctions, function(funcName) {\n                return funcName.toLowerCase().indexOf(value) === 0;\n              });\n\n              if (!funcDef) { return; }\n            }\n\n            $scope.$apply(function() {\n              $scope.addFunction(funcDef);\n            });\n\n            $input.trigger('blur');\n            return '';\n          }\n        });\n\n        $button.click(function() {\n          $button.hide();\n          $input.show();\n          $input.focus();\n        });\n\n        $input.keyup(function() {\n          elem.toggleClass('open', $input.val() === '');\n        });\n\n        $input.blur(function() {\n          // clicking the function dropdown menu wont\n          // work if you remove class at once\n          setTimeout(function() {\n            $input.val('');\n            $input.hide();\n            $button.show();\n            elem.removeClass('open');\n          }, 200);\n        });\n\n        $compile(elem.contents())($scope);\n      }\n    };\n  });\n\nfunction getAllFunctionNames(categories) {\n  return _.reduce(categories, function(list, category) {\n    _.each(category, function(func) {\n      list.push(func.name);\n    });\n    return list;\n  }, []);\n}\n\nfunction createFunctionDropDownMenu(categories) {\n  return _.map(categories, function(list, category) {\n    return {\n      text: category,\n      submenu: _.map(list, function(value) {\n        return {\n          text: value.name,\n          click: \"ctrl.addFunction('\" + value.name + \"')\",\n        };\n      })\n    };\n  });\n}\n\n"]}