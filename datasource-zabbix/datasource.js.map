{"version":3,"sources":["../../src/datasource-zabbix/datasource.js"],"names":[],"mappings":"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","file":"datasource.js","sourcesContent":["//import angular from 'angular';\nimport _ from 'lodash';\nimport * as dateMath from 'app/core/utils/datemath';\nimport * as utils from './utils';\nimport * as migrations from './migrations';\nimport * as metricFunctions from './metricFunctions';\nimport DataProcessor from './DataProcessor';\nimport './zabbixAPI.service.js';\nimport './zabbixCache.service.js';\nimport './queryProcessor.service.js';\n\nexport class ZabbixAPIDatasource {\n\n  /** @ngInject */\n  constructor(instanceSettings, $q, templateSrv, alertSrv, zabbixAPIService, ZabbixCachingProxy, QueryProcessor) {\n\n    // General data source settings\n    this.name             = instanceSettings.name;\n    this.url              = instanceSettings.url;\n    this.basicAuth        = instanceSettings.basicAuth;\n    this.withCredentials  = instanceSettings.withCredentials;\n\n    // Zabbix API credentials\n    this.username         = instanceSettings.jsonData.username;\n    this.password         = instanceSettings.jsonData.password;\n\n    // Use trends instead history since specified time\n    this.trends           = instanceSettings.jsonData.trends;\n    this.trendsFrom       = instanceSettings.jsonData.trendsFrom || '7d';\n\n    // Set cache update interval\n    var ttl = instanceSettings.jsonData.cacheTTL || '1h';\n    this.cacheTTL = utils.parseInterval(ttl);\n\n    // Initialize Zabbix API\n    var ZabbixAPI = zabbixAPIService;\n    this.zabbixAPI = new ZabbixAPI(this.url, this.username, this.password, this.basicAuth, this.withCredentials);\n\n    // Initialize cache service\n    this.zabbixCache = new ZabbixCachingProxy(this.zabbixAPI, this.cacheTTL);\n\n    // Initialize query builder\n    this.queryProcessor = new QueryProcessor(this.zabbixCache);\n\n    // Dependencies\n    this.q = $q;\n    this.templateSrv = templateSrv;\n    this.alertSrv = alertSrv;\n\n    // If template variables are used in request, replace it using regex format\n    // and wrap with '/' for proper multi-value work. Example:\n    // $variable selected as a, b, c\n    // We use filter $variable\n    // $variable    -> a|b|c    -> /a|b|c/\n    // /$variable/  -> /a|b|c/  -> /a|b|c/\n    this.multiValueFormat = \"regex\";\n    this.replaceTemplateVars = function(target, scopedVars) {\n      var regexPattern = /^\\/.*\\/$/;\n      var replacedTarget = this.templateSrv.replace(target, scopedVars, this.multiValueFormat);\n      if (target !== replacedTarget && !regexPattern.test(replacedTarget)) {\n        replacedTarget = '/' + replacedTarget + '/';\n      }\n      return replacedTarget;\n    };\n\n    console.log(this.zabbixCache);\n  }\n\n  ////////////////////////\n  // Datasource methods //\n  ////////////////////////\n\n  /**\n   * Test connection to Zabbix API\n   * @return {object} Connection status and Zabbix API version\n   */\n  testDatasource() {\n    var self = this;\n    return this.zabbixAPI.getVersion().then(function (version) {\n      return self.zabbixAPI.login().then(function (auth) {\n        if (auth) {\n          return {\n            status: \"success\",\n            title: \"Success\",\n            message: \"Zabbix API version: \" + version\n          };\n        } else {\n          return {\n            status: \"error\",\n            title: \"Invalid user name or password\",\n            message: \"Zabbix API version: \" + version\n          };\n        }\n      }, function(error) {\n        console.log(error);\n        return {\n          status: \"error\",\n          title: \"Connection failed\",\n          message: error\n        };\n      });\n    },\n    function(error) {\n      console.log(error);\n      return {\n        status: \"error\",\n        title: \"Connection failed\",\n        message: \"Could not connect to given url\"\n      };\n    });\n  }\n\n  /**\n   * Query panel data. Calls for each panel in dashboard.\n   * @param  {Object} options   Contains time range, targets and other info.\n   * @return {Object} Grafana metrics object with timeseries data for each target.\n   */\n  query(options) {\n    var self = this;\n\n    // get from & to in seconds\n    var from = Math.ceil(dateMath.parse(options.range.from) / 1000);\n    var to = Math.ceil(dateMath.parse(options.range.to) / 1000);\n    var useTrendsFrom = Math.ceil(dateMath.parse('now-' + this.trendsFrom) / 1000);\n\n    // Create request for each target\n    var promises = _.map(options.targets, function(target) {\n\n      if (target.mode !== 1) {\n\n        // Migrate old targets\n        target = migrations.migrate(target);\n\n        // Don't request undefined and hidden targets\n        if (target.hide || !target.group ||\n            !target.host || !target.item) {\n          return [];\n        }\n\n        // Replace templated variables\n        var groupFilter = this.replaceTemplateVars(target.group.filter, options.scopedVars, self.multiValueFormat);\n        var hostFilter = this.replaceTemplateVars(target.host.filter, options.scopedVars, self.multiValueFormat);\n        var appFilter = this.replaceTemplateVars(target.application.filter, options.scopedVars, self.multiValueFormat);\n        var itemFilter = this.replaceTemplateVars(target.item.filter, options.scopedVars, self.multiValueFormat);\n\n        // Query numeric data\n        if (!target.mode || target.mode === 0) {\n\n          // Build query in asynchronous manner\n          return self.queryProcessor.build(groupFilter, hostFilter, appFilter, itemFilter)\n            .then(function(items) {\n              // Add hostname for items from multiple hosts\n              var addHostName = utils.isRegex(target.host.filter);\n              var getHistory;\n\n              // Use trends\n              if ((from < useTrendsFrom) && self.trends) {\n\n                // Find trendValue() function and get specified trend value\n                var trendFunctions = _.map(metricFunctions.getCategories()['Trends'], 'name');\n                var trendValueFunc = _.find(target.functions, function(func) {\n                  return _.contains(trendFunctions, func.def.name);\n                });\n                var valueType = trendValueFunc ? trendValueFunc.params[0] : \"avg\";\n\n                getHistory = self.zabbixAPI.getTrend(items, from, to).then(function(history) {\n                  return self.queryProcessor.handleTrends(history, addHostName, valueType);\n                });\n              } else {\n\n                // Use history\n                getHistory = self.zabbixCache.getHistory(items, from, to).then(function(history) {\n                  return self.queryProcessor.handleHistory(history, addHostName);\n                });\n              }\n\n              return getHistory.then(function (timeseries_data) {\n                timeseries_data = _.map(timeseries_data, function (timeseries) {\n\n                  // Filter only transform functions\n                  var transformFunctions = bindFunctionDefs(target.functions, 'Transform', DataProcessor);\n\n                  // Metric data processing\n                  var dp = timeseries.datapoints;\n                  for (var i = 0; i < transformFunctions.length; i++) {\n                    dp = transformFunctions[i](dp);\n                  }\n                  timeseries.datapoints = dp;\n\n                  return timeseries;\n                });\n\n                // Aggregations\n                var aggregationFunctions = bindFunctionDefs(target.functions, 'Aggregate', DataProcessor);\n                var dp = _.map(timeseries_data, 'datapoints');\n                if (aggregationFunctions.length) {\n                  for (var i = 0; i < aggregationFunctions.length; i++) {\n                    dp = aggregationFunctions[i](dp);\n                  }\n                  var lastAgg = _.findLast(target.functions, function(func) {\n                    return _.contains(\n                      _.map(metricFunctions.getCategories()['Aggregate'], 'name'), func.def.name);\n                  });\n                  timeseries_data = [{\n                    target: lastAgg.text,\n                    datapoints: dp\n                  }];\n                }\n\n                // Apply alias functions\n                var aliasFunctions = bindFunctionDefs(target.functions, 'Alias', DataProcessor);\n                for (var j = 0; j < aliasFunctions.length; j++) {\n                  _.each(timeseries_data, aliasFunctions[j]);\n                }\n\n                return timeseries_data;\n              });\n            });\n        }\n\n        // Query text data\n        else if (target.mode === 2) {\n          return self.queryProcessor.build(groupFilter, hostFilter, appFilter, itemFilter)\n            .then(function(items) {\n              var deferred = self.q.defer();\n              if (items.length) {\n                self.zabbixAPI.getLastValue(items[0].itemid).then(function(lastvalue) {\n                  if (target.textFilter) {\n                    var text_extract_pattern = new RegExp(self.replaceTemplateVars(target.textFilter, options.scopedVars));\n                    var result = text_extract_pattern.exec(lastvalue);\n                    if (result) {\n                      if (target.useCaptureGroups) {\n                        result = result[1];\n                      } else {\n                        result = result[0];\n                      }\n                    }\n                    deferred.resolve(result);\n                  } else {\n                    deferred.resolve(lastvalue);\n                  }\n                });\n              } else {\n                deferred.resolve(null);\n              }\n              return deferred.promise.then(function(text) {\n                return {\n                  target: target.item.name,\n                  datapoints: [[text, to * 1000]]\n                };\n              });\n            });\n        }\n      }\n\n      // IT services mode\n      else if (target.mode === 1) {\n        // Don't show undefined and hidden targets\n        if (target.hide || !target.itservice || !target.slaProperty) {\n          return [];\n        } else {\n          return this.zabbixAPI.getSLA(target.itservice.serviceid, from, to)\n            .then(slaObject => {\n              return self.queryProcessor.handleSLAResponse(target.itservice, target.slaProperty, slaObject);\n            });\n        }\n      }\n    }, this);\n\n    // Data for panel (all targets)\n    return this.q.all(_.flatten(promises))\n      .then(_.flatten)\n      .then(function (timeseries_data) {\n\n        // Series downsampling\n        var data = _.map(timeseries_data, function(timeseries) {\n          if (timeseries.datapoints.length > options.maxDataPoints) {\n            timeseries.datapoints =\n              DataProcessor.groupBy(options.interval, DataProcessor.AVERAGE, timeseries.datapoints);\n          }\n          return timeseries;\n        });\n        return { data: data };\n      });\n  }\n\n  ////////////////\n  // Templating //\n  ////////////////\n\n  /**\n   * Find metrics from templated request.\n   *\n   * @param  {string} query Query from Templating\n   * @return {string}       Metric name - group, host, app or item or list\n   *                        of metrics in \"{metric1,metcic2,...,metricN}\" format.\n   */\n  metricFindQuery(query) {\n    // Split query. Query structure:\n    // group.host.app.item\n    var self = this;\n    var parts = [];\n    _.each(query.split('.'), function (part) {\n      part = self.replaceTemplateVars(part, {}, self.multiValueFormat);\n\n      // Replace wildcard to regex\n      if (part === '*') {\n        part = '/.*/';\n      }\n      parts.push(part);\n    });\n    var template = _.object(['group', 'host', 'app', 'item'], parts);\n\n    // Get items\n    if (parts.length === 4) {\n      // Search for all items, even it's not belong to any application\n      if (template.app === '/.*/') {\n        template.app = '';\n      }\n      return this.queryProcessor.getItems(template.group, template.host, template.app)\n        .then(function(items) {\n          return _.map(items, formatMetric);\n        });\n    }\n    // Get applications\n    else if (parts.length === 3) {\n      return this.queryProcessor.getApps(template.group, template.host)\n        .then(function(apps) {\n          return _.map(apps, formatMetric);\n        });\n    }\n    // Get hosts\n    else if (parts.length === 2) {\n      return this.queryProcessor.getHosts(template.group)\n        .then(function(hosts) {\n          return _.map(hosts, formatMetric);\n        });\n    }\n    // Get groups\n    else if (parts.length === 1) {\n      return this.zabbixCache.getGroups(template.group).then(function(groups) {\n        return _.map(groups, formatMetric);\n      });\n    }\n    // Return empty object for invalid request\n    else {\n      return this.q.when([]);\n    }\n  }\n\n  /////////////////\n  // Annotations //\n  /////////////////\n\n  annotationQuery(options) {\n    var timeFrom = Math.ceil(dateMath.parse(options.rangeRaw.from) / 1000);\n    var timeTo = Math.ceil(dateMath.parse(options.rangeRaw.to) / 1000);\n    var annotation = options.annotation;\n    var self = this;\n    var showOkEvents = annotation.showOkEvents ? [0, 1] : 1;\n\n    // Show all triggers\n    var showTriggers = [0, 1];\n\n    var buildQuery = self.queryProcessor.buildTriggerQuery(this.replaceTemplateVars(annotation.group, {}, self.multiValueFormat),\n                                                           this.replaceTemplateVars(annotation.host, {}, self.multiValueFormat),\n                                                           this.replaceTemplateVars(annotation.application, {}, self.multiValueFormat));\n    return buildQuery.then(function(query) {\n      return self.zabbixAPI.getTriggers(query.groupids,\n                                        query.hostids,\n                                        query.applicationids,\n                                        showTriggers,\n                                        timeFrom, timeTo)\n        .then(function(triggers) {\n\n          // Filter triggers by description\n          if (utils.isRegex(annotation.trigger)) {\n            triggers = _.filter(triggers, function(trigger) {\n              return utils.buildRegex(annotation.trigger).test(trigger.description);\n            });\n          } else if (annotation.trigger) {\n            triggers = _.filter(triggers, function(trigger) {\n              return trigger.description === annotation.trigger;\n            });\n          }\n\n          // Remove events below the chose severity\n          triggers = _.filter(triggers, function(trigger) {\n            return Number(trigger.priority) >= Number(annotation.minseverity);\n          });\n\n          var objectids = _.map(triggers, 'triggerid');\n          return self.zabbixAPI.getEvents(objectids, timeFrom, timeTo, showOkEvents)\n            .then(function (events) {\n              var indexedTriggers = _.indexBy(triggers, 'triggerid');\n\n              // Hide acknowledged events if option enabled\n              if (annotation.hideAcknowledged) {\n                events = _.filter(events, function(event) {\n                  return !event.acknowledges.length;\n                });\n              }\n\n              return _.map(events, function(e) {\n                var title ='';\n                if (annotation.showHostname) {\n                  title += e.hosts[0].name + ': ';\n                }\n\n                // Show event type (OK or Problem)\n                title += Number(e.value) ? 'Problem' : 'OK';\n\n                var formatted_acknowledges = utils.formatAcknowledges(e.acknowledges);\n                return {\n                  annotation: annotation,\n                  time: e.clock * 1000,\n                  title: title,\n                  text: indexedTriggers[e.objectid].description + formatted_acknowledges\n                };\n              });\n            });\n        });\n    });\n  }\n\n}\n\nfunction bindFunctionDefs(functionDefs, category, DataProcessor) {\n  'use strict';\n  var aggregationFunctions = _.map(metricFunctions.getCategories()[category], 'name');\n  var aggFuncDefs = _.filter(functionDefs, function(func) {\n    return _.contains(aggregationFunctions, func.def.name);\n  });\n\n  return _.map(aggFuncDefs, function(func) {\n    var funcInstance = metricFunctions.createFuncInstance(func.def, func.params);\n    return funcInstance.bindFunction(DataProcessor.metricFunctions);\n  });\n}\n\nfunction formatMetric(metricObj) {\n  'use strict';\n  return {\n    text: metricObj.name,\n    expandable: false\n  };\n}\n"]}