{"version":3,"sources":["../../src/datasource-zabbix/metricFunctions.js"],"names":[],"mappings":"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","file":"metricFunctions.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\n\nvar index = [];\nvar categories = {\n  Transform: [],\n  Aggregate: [],\n  Trends: [],\n  Alias: []\n};\n\nfunction addFuncDef(funcDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  if (funcDef.category) {\n    categories[funcDef.category].push(funcDef);\n  }\n  index[funcDef.name] = funcDef;\n  index[funcDef.shortName || funcDef.name] = funcDef;\n}\n\naddFuncDef({\n  name: 'groupBy',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string'},\n    { name: 'function', type: 'string', options: ['avg', 'min', 'max', 'median'] }\n  ],\n  defaultParams: ['1m', 'avg'],\n});\n\naddFuncDef({\n  name: 'sumSeries',\n  category: 'Aggregate',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'median',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string'}\n  ],\n  defaultParams: ['1m'],\n});\n\naddFuncDef({\n  name: 'average',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' }\n  ],\n  defaultParams: ['1m'],\n});\n\naddFuncDef({\n  name: 'min',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' }\n  ],\n  defaultParams: ['1m'],\n});\n\naddFuncDef({\n  name: 'max',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' }\n  ],\n  defaultParams: ['1m'],\n});\n\naddFuncDef({\n  name: 'trendValue',\n  category: 'Trends',\n  params: [\n    { name: 'type', type: 'string', options: ['avg', 'min', 'max'] }\n  ],\n  defaultParams: ['avg'],\n});\n\naddFuncDef({\n  name: 'setAlias',\n  category: 'Alias',\n  params: [\n    { name: 'alias', type: 'string'}\n  ],\n  defaultParams: [],\n});\n\n_.each(categories, function(funcList, catName) {\n  categories[catName] = _.sortBy(funcList, 'name');\n});\n\nclass FuncInstance {\n  constructor(funcDef, params) {\n    this.def = funcDef;\n\n    if (params) {\n      this.params = params;\n    } else {\n      // Create with default params\n      this.params = [];\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  bindFunction(metricFunctions) {\n    var func = metricFunctions[this.def.name];\n    if (func) {\n\n      // Bind function arguments\n      var bindedFunc = func;\n      for (var i = 0; i < this.params.length; i++) {\n        bindedFunc = _.partial(bindedFunc, this.params[i]);\n      }\n      return bindedFunc;\n    } else {\n      throw { message: 'Method not found ' + this.def.name };\n    }\n  }\n\n  render(metricExp) {\n    var str = this.def.name + '(';\n    var parameters = _.map(this.params, function(value, index) {\n\n      var paramType = this.def.params[index].type;\n      if (paramType === 'int' || paramType === 'value_or_series' || paramType === 'boolean') {\n        return value;\n      }\n      else if (paramType === 'int_or_interval' && $.isNumeric(value)) {\n        return value;\n      }\n\n      return \"'\" + value + \"'\";\n\n    }, this);\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), function(partVal, idx) {\n        this.updateParam(partVal.trim(), idx);\n      }, this);\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    }\n    else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    var text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function createFuncInstance(funcDef, params) {\n  if (_.isString(funcDef)) {\n    if (!index[funcDef]) {\n      throw { message: 'Method not found ' + name };\n    }\n    funcDef = index[funcDef];\n  }\n  return new FuncInstance(funcDef, params);\n}\n\nexport function getFuncDef(name) {\n  return index[name];\n}\n\nexport function getCategories() {\n  return categories;\n}\n"]}