{"version":3,"sources":["../../src/datasource-zabbix/metricFunctions.js"],"names":[],"mappings":"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","file":"metricFunctions.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\n\nvar index = [];\nvar categories = {\n  Transform: [],\n  Aggregate: [],\n  Filter: [],\n  Trends: [],\n  Alias: []\n};\n\nfunction addFuncDef(funcDef) {\n  funcDef.params = funcDef.params || [];\n  funcDef.defaultParams = funcDef.defaultParams || [];\n\n  if (funcDef.category) {\n    categories[funcDef.category].push(funcDef);\n  }\n  index[funcDef.name] = funcDef;\n  index[funcDef.shortName || funcDef.name] = funcDef;\n}\n\naddFuncDef({\n  name: 'groupBy',\n  category: 'Transform',\n  params: [\n    { name: 'interval', type: 'string'},\n    { name: 'function', type: 'string', options: ['avg', 'min', 'max', 'median'] }\n  ],\n  defaultParams: ['1m', 'avg'],\n});\n\naddFuncDef({\n  name: 'scale',\n  category: 'Transform',\n  params: [\n    { name: 'factor', type: 'float', options: [100, 0.01, 10, -1]}\n  ],\n  defaultParams: [100],\n});\n\naddFuncDef({\n  name: 'delta',\n  category: 'Transform',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'sumSeries',\n  category: 'Aggregate',\n  params: [],\n  defaultParams: [],\n});\n\naddFuncDef({\n  name: 'median',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string'}\n  ],\n  defaultParams: ['1m'],\n});\n\naddFuncDef({\n  name: 'average',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' }\n  ],\n  defaultParams: ['1m'],\n});\n\naddFuncDef({\n  name: 'min',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' }\n  ],\n  defaultParams: ['1m'],\n});\n\naddFuncDef({\n  name: 'max',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' }\n  ],\n  defaultParams: ['1m'],\n});\n\naddFuncDef({\n  name: 'aggregateBy',\n  category: 'Aggregate',\n  params: [\n    { name: 'interval', type: 'string' },\n    { name: 'function', type: 'string', options: ['avg', 'min', 'max', 'median'] }\n  ],\n  defaultParams: ['1m', 'avg'],\n});\n\naddFuncDef({\n  name: 'top',\n  category: 'Filter',\n  params: [\n    { name: 'number', type: 'int' },\n    { name: 'value', type: 'string', options: ['avg', 'min', 'max', 'median'] }\n  ],\n  defaultParams: [5, 'avg'],\n});\n\naddFuncDef({\n  name: 'bottom',\n  category: 'Filter',\n  params: [\n    { name: 'number', type: 'int' },\n    { name: 'value', type: 'string', options: ['avg', 'min', 'max', 'median'] }\n  ],\n  defaultParams: [5, 'avg'],\n});\n\naddFuncDef({\n  name: 'trendValue',\n  category: 'Trends',\n  params: [\n    { name: 'type', type: 'string', options: ['avg', 'min', 'max'] }\n  ],\n  defaultParams: ['avg'],\n});\n\naddFuncDef({\n  name: 'setAlias',\n  category: 'Alias',\n  params: [\n    { name: 'alias', type: 'string'}\n  ],\n  defaultParams: [],\n});\n\n_.each(categories, function(funcList, catName) {\n  categories[catName] = _.sortBy(funcList, 'name');\n});\n\nclass FuncInstance {\n  constructor(funcDef, params) {\n    this.def = funcDef;\n\n    if (params) {\n      this.params = params;\n    } else {\n      // Create with default params\n      this.params = [];\n      this.params = funcDef.defaultParams.slice(0);\n    }\n\n    this.updateText();\n  }\n\n  bindFunction(metricFunctions) {\n    var func = metricFunctions[this.def.name];\n    if (func) {\n\n      // Bind function arguments\n      var bindedFunc = func;\n      var param;\n      for (var i = 0; i < this.params.length; i++) {\n        param = this.params[i];\n\n        // Convert numeric params\n        if (this.def.params[i].type === 'int' ||\n            this.def.params[i].type === 'float') {\n          param = Number(param);\n        }\n        bindedFunc = _.partial(bindedFunc, param);\n      }\n      return bindedFunc;\n    } else {\n      throw { message: 'Method not found ' + this.def.name };\n    }\n  }\n\n  render(metricExp) {\n    var str = this.def.name + '(';\n    var parameters = _.map(this.params, function(value, index) {\n\n      var paramType = this.def.params[index].type;\n      if (paramType === 'int' ||\n          paramType === 'float' ||\n          paramType === 'value_or_series' ||\n          paramType === 'boolean') {\n        return value;\n      }\n      else if (paramType === 'int_or_interval' && $.isNumeric(value)) {\n        return value;\n      }\n\n      return \"'\" + value + \"'\";\n\n    }, this);\n\n    if (metricExp) {\n      parameters.unshift(metricExp);\n    }\n\n    return str + parameters.join(', ') + ')';\n  }\n\n  _hasMultipleParamsInString(strValue, index) {\n    if (strValue.indexOf(',') === -1) {\n      return false;\n    }\n\n    return this.def.params[index + 1] && this.def.params[index + 1].optional;\n  }\n\n  updateParam(strValue, index) {\n    // handle optional parameters\n    // if string contains ',' and next param is optional, split and update both\n    if (this._hasMultipleParamsInString(strValue, index)) {\n      _.each(strValue.split(','), function(partVal, idx) {\n        this.updateParam(partVal.trim(), idx);\n      }, this);\n      return;\n    }\n\n    if (strValue === '' && this.def.params[index].optional) {\n      this.params.splice(index, 1);\n    }\n    else {\n      this.params[index] = strValue;\n    }\n\n    this.updateText();\n  }\n\n  updateText() {\n    if (this.params.length === 0) {\n      this.text = this.def.name + '()';\n      return;\n    }\n\n    var text = this.def.name + '(';\n    text += this.params.join(', ');\n    text += ')';\n    this.text = text;\n  }\n}\n\nexport function createFuncInstance(funcDef, params) {\n  if (_.isString(funcDef)) {\n    if (!index[funcDef]) {\n      throw { message: 'Method not found ' + name };\n    }\n    funcDef = index[funcDef];\n  }\n  return new FuncInstance(funcDef, params);\n}\n\nexport function getFuncDef(name) {\n  return index[name];\n}\n\nexport function getCategories() {\n  return categories;\n}\n"]}