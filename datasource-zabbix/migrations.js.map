{"version":3,"sources":["../../src/datasource-zabbix/migrations.js"],"names":[],"mappings":";;;;AAmCA,WAAS,cAAT,CAAwB,GAAxB,EAA6B;AAC3B,QAAI,GAAJ,EAAS;AACP,aAAO,MAAM,GAAN,GAAY,GAAnB;AACD,KAFD,MAEO;AACL,aAAO,MAAP;AACD;AACF;;;;;;;;;AApCM,eAAS,gBAAT,CAA0B,MAA1B,EAAkC;AACvC,YAAI,CAAC,OAAO,IAAR,IAAgB,OAAO,IAAP,KAAgB,CAAhC,IAAqC,OAAO,IAAP,KAAgB,CAAzD,EAA4D;AAC1D,cAAI,CAAC,OAAO,UAAP,IAAqB,OAAO,UAA5B,IAA0C,OAAO,kBAAjD,IACA,OAAO,IAAP,IAAe,OAAO,IAAP,CAAY,IAD5B,KAEC,OAAO,IAAP,CAAY,MAAZ,KAAuB,SAAvB,IAAoC,OAAO,IAAP,CAAY,MAAZ,KAAuB,SAFhE,EAE4E;AAC1E,mBAAO,IAAP;AACD,WAJD,MAIO;AACL,mBAAO,KAAP;AACD;AACF,SARD,MAQO;AACL,iBAAO,KAAP;AACD;AACF;;;;AAEM,eAAS,sBAAT,CAAgC,MAAhC,EAAwC;AAC7C,eAAO,KAAP,CAAa,MAAb,GAAsB,OAAO,KAAP,CAAa,IAAb,KAAsB,GAAtB,GAA4B,MAA5B,GAAqC,OAAO,KAAP,CAAa,IAAxE;AACA,eAAO,IAAP,CAAY,MAAZ,GAAqB,OAAO,IAAP,CAAY,IAAZ,KAAqB,GAArB,GAA2B,eAAe,OAAO,UAAtB,CAA3B,GAA+D,OAAO,IAAP,CAAY,IAAhG;AACA,eAAO,WAAP,CAAmB,MAAnB,GAA4B,OAAO,WAAP,CAAmB,IAAnB,KAA4B,GAA5B,GAAkC,EAAlC,GAAuC,OAAO,WAAP,CAAmB,IAAtF;AACA,eAAO,IAAP,CAAY,MAAZ,GAAqB,OAAO,IAAP,CAAY,IAAZ,KAAqB,KAArB,GAA6B,eAAe,OAAO,UAAtB,CAA7B,GAAiE,OAAO,IAAP,CAAY,IAAlG;AACA,eAAO,MAAP;AACD;;;;AAEM,eAAS,OAAT,CAAiB,MAAjB,EAAyB;AAC9B,YAAI,iBAAiB,MAAjB,CAAJ,EAA8B;AAC5B,iBAAO,uBAAuB,MAAvB,CAAP;AACD,SAFD,MAEO;AACL,iBAAO,MAAP;AACD;AACF","file":"migrations.js","sourcesContent":["/**\n * Query format migration.\n * This module can detect query format version and make migration.\n */\n\nexport function isGrafana2target(target) {\n  if (!target.mode || target.mode === 0 || target.mode === 2) {\n    if ((target.hostFilter || target.itemFilter || target.downsampleFunction ||\n        (target.host && target.host.host)) &&\n        (target.item.filter === undefined && target.host.filter === undefined)) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n\nexport function migrateFrom2To3version(target) {\n  target.group.filter = target.group.name === \"*\" ? \"/.*/\" : target.group.name;\n  target.host.filter = target.host.name === \"*\" ? convertToRegex(target.hostFilter) : target.host.name;\n  target.application.filter = target.application.name === \"*\" ? \"\" : target.application.name;\n  target.item.filter = target.item.name === \"All\" ? convertToRegex(target.itemFilter) : target.item.name;\n  return target;\n}\n\nexport function migrate(target) {\n  if (isGrafana2target(target)) {\n    return migrateFrom2To3version(target);\n  } else {\n    return target;\n  }\n}\n\nfunction convertToRegex(str) {\n  if (str) {\n    return '/' + str + '/';\n  } else {\n    return '/.*/';\n  }\n}\n"]}