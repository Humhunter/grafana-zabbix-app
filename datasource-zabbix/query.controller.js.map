{"version":3,"sources":["../../src/datasource-zabbix/query.controller.js"],"names":[],"mappings":"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","file":"query.controller.js","sourcesContent":["import {QueryCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport * as utils from './utils';\nimport * as metricFunctions from './metricFunctions';\nimport * as migrations from './migrations';\n\nimport './add-metric-function.directive';\nimport './metric-function-editor.directive';\n\nimport './css/query-editor.css!';\n\nexport class ZabbixQueryController extends QueryCtrl {\n\n  // ZabbixQueryCtrl constructor\n  constructor($scope, $injector, $sce, $q, templateSrv) {\n\n    // Call superclass constructor\n    super($scope, $injector);\n\n    this.zabbix = this.datasource.zabbixAPI;\n    this.cache = this.datasource.zabbixCache;\n    this.$q = $q;\n\n    this.editorModes = {\n      0: 'num',\n      1: 'itservice',\n      2: 'text'\n    };\n\n    // Map functions for bs-typeahead\n    this.getGroupNames = _.partial(getMetricNames, this, 'groupList');\n    this.getHostNames = _.partial(getMetricNames, this, 'hostList');\n    this.getApplicationNames = _.partial(getMetricNames, this, 'appList');\n    this.getItemNames = _.partial(getMetricNames, this, 'itemList');\n\n    this.init = function() {\n\n      this.templateSrv = templateSrv;\n      var target = this.target;\n\n      // Migrate old targets\n      target = migrations.migrate(target);\n\n      var scopeDefaults = {\n        metric: {},\n        oldTarget: _.cloneDeep(this.target)\n      };\n      _.defaults(this, scopeDefaults);\n\n      // Load default values\n      var targetDefaults = {\n        mode: 0,\n        group: { filter: \"\" },\n        host: { filter: \"\" },\n        application: { filter: \"\" },\n        item: { filter: \"\" },\n        functions: [],\n        refId: \"A\"\n      };\n      _.defaults(target, targetDefaults);\n\n      // Create function instances from saved JSON\n      target.functions = _.map(target.functions, function(func) {\n        return metricFunctions.createFuncInstance(func.def, func.params);\n      });\n\n      if (target.mode === 0 ||\n          target.mode === 2) {\n\n        this.downsampleFunctionList = [\n          {name: \"avg\", value: \"avg\"},\n          {name: \"min\", value: \"min\"},\n          {name: \"max\", value: \"max\"}\n        ];\n\n        this.initFilters();\n      }\n      else if (target.mode === 1) {\n        this.slaPropertyList = [\n          {name: \"Status\", property: \"status\"},\n          {name: \"SLA\", property: \"sla\"},\n          {name: \"OK time\", property: \"okTime\"},\n          {name: \"Problem time\", property: \"problemTime\"},\n          {name: \"Down time\", property: \"downtimeTime\"}\n        ];\n        this.itserviceList = [{name: \"test\"}];\n        this.updateITServiceList();\n      }\n    };\n\n    this.init();\n  }\n\n  initFilters() {\n    var self = this;\n    return this.$q.when(this.suggestGroups())\n      .then(() => {return self.suggestHosts();})\n      .then(() => {return self.suggestApps();})\n      .then(() => {return self.suggestItems();});\n  }\n\n  suggestGroups() {\n    var self = this;\n    return this.cache.getGroups().then(groups => {\n      self.metric.groupList = groups;\n      return groups;\n    });\n  }\n\n  suggestHosts() {\n    var self = this;\n    var groupFilter = this.templateSrv.replace(this.target.group.filter);\n    return this.datasource.queryProcessor\n      .filterGroups(self.metric.groupList, groupFilter)\n      .then(groups => {\n        var groupids = _.map(groups, 'groupid');\n        return self.zabbix\n          .getHosts(groupids)\n          .then(hosts => {\n            self.metric.hostList = hosts;\n            return hosts;\n          });\n      });\n  }\n\n  suggestApps() {\n    var self = this;\n    var hostFilter = this.templateSrv.replace(this.target.host.filter);\n    return this.datasource.queryProcessor\n      .filterHosts(self.metric.hostList, hostFilter)\n      .then(hosts => {\n        var hostids = _.map(hosts, 'hostid');\n        return self.zabbix\n          .getApps(hostids)\n          .then(apps => {\n            return self.metric.appList = apps;\n          });\n      });\n  }\n\n  suggestItems() {\n    var self = this;\n    var appFilter = this.templateSrv.replace(this.target.application.filter);\n    if (appFilter) {\n      // Filter by applications\n      return this.datasource.queryProcessor\n        .filterApps(self.metric.appList, appFilter)\n        .then(apps => {\n          var appids = _.map(apps, 'applicationid');\n          return self.zabbix\n            .getItems(undefined, appids)\n            .then(items => {\n              if (!self.target.showDisabledItems) {\n                items = _.filter(items, {'status': '0'});\n              }\n              self.metric.itemList = items;\n              return items;\n            });\n        });\n    } else {\n      // Return all items belonged to selected hosts\n      var hostids = _.map(self.metric.hostList, 'hostid');\n      return self.zabbix\n        .getItems(hostids)\n        .then(items => {\n          if (!self.target.showDisabledItems) {\n            items = _.filter(items, {'status': '0'});\n          }\n          self.metric.itemList = items;\n          return items;\n        });\n    }\n  }\n\n  onTargetPartChange(targetPart) {\n    /*var regexStyle = {'color': '#CCA300'};\n    targetPart.isRegex = utils.isRegex(targetPart.filter);\n    targetPart.style = targetPart.isRegex ? regexStyle : {};*/\n  }\n\n  isRegex(str) {\n    return utils.isRegex(str);\n  }\n\n  isVariable(str) {\n    var variablePattern = /^\\$\\w+/;\n    if (variablePattern.test(str)) {\n      var variables = _.map(this.templateSrv.variables, variable => {\n        return '$' + variable.name;\n      });\n      return _.contains(variables, str);\n    } else {\n      return false;\n    }\n  }\n\n  onTargetBlur() {\n    var newTarget = _.cloneDeep(this.target);\n    if (!_.isEqual(this.oldTarget, this.target)) {\n      this.oldTarget = newTarget;\n      this.initFilters();\n      this.parseTarget();\n      this.panelCtrl.refresh();\n    }\n  }\n\n  parseTarget() {\n    // Parse target\n  }\n\n  // Validate target and set validation info\n  validateTarget() {\n    // validate\n  }\n\n  targetChanged() {\n    this.panelCtrl.refresh();\n  }\n\n  addFunction(funcDef) {\n    var newFunc = metricFunctions.createFuncInstance(funcDef);\n    newFunc.added = true;\n    this.target.functions.push(newFunc);\n\n    this.moveAliasFuncLast();\n\n    if (newFunc.params.length && newFunc.added ||\n        newFunc.def.params.length === 0) {\n      this.targetChanged();\n    }\n  }\n\n  removeFunction(func) {\n    this.target.functions = _.without(this.target.functions, func);\n    this.targetChanged();\n  }\n\n  moveAliasFuncLast() {\n    var aliasFunc = _.find(this.target.functions, function(func) {\n      return func.def.name === 'alias' ||\n        func.def.name === 'aliasByNode' ||\n        func.def.name === 'aliasByMetric';\n    });\n\n    if (aliasFunc) {\n      this.target.functions = _.without(this.target.functions, aliasFunc);\n      this.target.functions.push(aliasFunc);\n    }\n  }\n\n  /**\n   * Switch query editor to specified mode.\n   * Modes:\n   *  0 - items\n   *  1 - IT services\n   *  2 - Text metrics\n   */\n  switchEditorMode(mode) {\n    this.target.mode = mode;\n    this.init();\n  }\n\n  /////////////////\n  // IT Services //\n  /////////////////\n\n  /**\n   * Update list of IT services\n   */\n  updateITServiceList() {\n    var self = this;\n    this.datasource.zabbixAPI.getITService().then(function (iteservices) {\n      self.itserviceList = [];\n      self.itserviceList = self.itserviceList.concat(iteservices);\n    });\n  }\n\n  /**\n   * Call when IT service is selected.\n   */\n  selectITService() {\n    if (!_.isEqual(this.oldTarget, this.target) && _.isEmpty(this.target.errors)) {\n      this.oldTarget = angular.copy(this.target);\n      this.panelCtrl.refresh();\n    }\n  }\n\n}\n\n// Set templateUrl as static property\nZabbixQueryController.templateUrl = 'datasource-zabbix/partials/query.editor.html';\n\n// Get list of metric names for bs-typeahead directive\nfunction getMetricNames(scope, metricList) {\n  return _.uniq(_.map(scope.metric[metricList], 'name'));\n}\n"]}