{"version":3,"sources":["../../src/datasource-zabbix/queryProcessor.service.js"],"names":[],"mappings":"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","file":"queryProcessor.service.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport * as utils from './utils';\n\n/** @ngInject */\nangular.module('grafana.services').factory('QueryProcessor', function($q) {\n\n  class QueryProcessor {\n    constructor(zabbixCacheInstance) {\n      this.cache = zabbixCacheInstance;\n      this.$q = $q;\n    }\n\n    /**\n     * Build query in asynchronous manner\n     */\n    build(groupFilter, hostFilter, appFilter, itemFilter, itemtype) {\n      var self = this;\n      if (this.cache._initialized) {\n        return this.$q.when(self.buildFromCache(groupFilter, hostFilter, appFilter, itemFilter, itemtype));\n      } else {\n        return this.cache.refresh().then(function() {\n          return self.buildFromCache(groupFilter, hostFilter, appFilter, itemFilter, itemtype);\n        });\n      }\n    }\n\n    /**\n     * Build trigger query in asynchronous manner\n     */\n    buildTriggerQuery(groupFilter, hostFilter, appFilter) {\n      var self = this;\n      if (this.cache._initialized) {\n        return this.$q.when(self.buildTriggerQueryFromCache(groupFilter, hostFilter, appFilter));\n      } else {\n        return this.cache.refresh().then(function() {\n          return self.buildTriggerQueryFromCache(groupFilter, hostFilter, appFilter);\n        });\n      }\n    }\n\n    filterGroups(groups, groupFilter) {\n      return this.$q.when(\n        findByFilter(groups, groupFilter)\n      );\n    }\n\n    /**\n     * Get list of host belonging to given groups.\n     * @return list of hosts\n     */\n    filterHosts(hosts, hostFilter) {\n      return this.$q.when(\n        findByFilter(hosts, hostFilter)\n      );\n    }\n\n    filterApps(apps, appFilter) {\n      return this.$q.when(\n        findByFilter(apps, appFilter)\n      );\n    }\n\n    /**\n     * Build query - convert target filters to array of Zabbix items\n     */\n    buildFromCache(groupFilter, hostFilter, appFilter, itemFilter, itemtype, showDisabledItems) {\n      return this.getItems(groupFilter, hostFilter, appFilter, itemtype, showDisabledItems)\n        .then(items => {\n          return getByFilter(items, itemFilter);\n        });\n    }\n\n    getGroups() {\n      return this.cache.getGroups();\n    }\n\n    /**\n     * Get list of host belonging to given groups.\n     * @return list of hosts\n     */\n    getHosts(groupFilter) {\n      var self = this;\n      return this.cache\n        .getGroups()\n        .then(groups => {\n          return findByFilter(groups, groupFilter);\n        })\n        .then(groups => {\n          var groupids = _.map(groups, 'groupid');\n          return self.cache.getHosts(groupids);\n        });\n    }\n\n    /**\n     * Get list of applications belonging to given groups and hosts.\n     * @return  list of applications belonging to given hosts\n     */\n    getApps(groupFilter, hostFilter) {\n      var self = this;\n      return this.getHosts(groupFilter)\n        .then(hosts => {\n          return findByFilter(hosts, hostFilter);\n        })\n        .then(hosts => {\n          var hostids = _.map(hosts, 'hostid');\n          return self.cache.getApps(hostids);\n        });\n    }\n\n    getItems(groupFilter, hostFilter, appFilter, itemtype, showDisabledItems) {\n      var self = this;\n      return this.getHosts(groupFilter)\n        .then(hosts => {\n          return findByFilter(hosts, hostFilter);\n        })\n        .then(hosts => {\n          var hostids = _.map(hosts, 'hostid');\n          if (appFilter) {\n            return self.cache\n              .getApps(hostids)\n              .then(apps => {\n                // Use getByFilter for proper item filtering\n                return getByFilter(apps, appFilter);\n              });\n          } else {\n            return {\n              appFilterEmpty: true,\n              hostids: hostids\n            };\n          }\n        })\n        .then(apps => {\n          if (apps.appFilterEmpty) {\n            return self.cache\n              .getItems(apps.hostids, undefined, itemtype)\n              .then(items => {\n                if (showDisabledItems) {\n                  items = _.filter(items, {'status': '0'});\n                }\n                return items;\n              });\n          } else {\n            var appids = _.map(apps, 'applicationid');\n            return self.cache\n              .getItems(undefined, appids, itemtype)\n              .then(items => {\n                if (showDisabledItems) {\n                  items = _.filter(items, {'status': '0'});\n                }\n                return items;\n              });\n          }\n        });\n    }\n\n    /**\n     * Build query - convert target filters to array of Zabbix items\n     */\n    buildTriggerQueryFromCache(groupFilter, hostFilter, appFilter) {\n      var promises = [\n        this.cache.getGroups().then(function(groups) {\n          return _.filter(groups, function(group) {\n            if (utils.isRegex(groupFilter)) {\n              return utils.buildRegex(groupFilter).test(group.name);\n            } else {\n              return group.name === groupFilter;\n            }\n          });\n        }),\n        this.getHosts(groupFilter).then(function(hosts) {\n          return _.filter(hosts, function(host) {\n            if (utils.isRegex(hostFilter)) {\n              return utils.buildRegex(hostFilter).test(host.name);\n            } else {\n              return host.name === hostFilter;\n            }\n          });\n        }),\n        this.getApps(groupFilter, hostFilter).then(function(apps) {\n          return _.filter(apps, function(app) {\n            if (utils.isRegex(appFilter)) {\n              return utils.buildRegex(appFilter).test(app.name);\n            } else {\n              return app.name === appFilter;\n            }\n          });\n        })\n      ];\n\n      return this.$q.all(promises).then(function(results) {\n        var filteredGroups = results[0];\n        var filteredHosts = results[1];\n        var filteredApps = results[2];\n        var query = {};\n\n        if (appFilter) {\n          query.applicationids = _.flatten(_.map(filteredApps, 'applicationid'));\n        }\n        if (hostFilter) {\n          query.hostids = _.map(filteredHosts, 'hostid');\n        }\n        if (groupFilter) {\n          query.groupids = _.map(filteredGroups, 'groupid');\n        }\n\n        return query;\n      });\n    }\n\n    /**\n     * Convert Zabbix API history.get response to Grafana format\n     *\n     * @return {Array}            Array of timeseries in Grafana format\n     *                            {\n     *                               target: \"Metric name\",\n     *                               datapoints: [[<value>, <unixtime>], ...]\n     *                            }\n     */\n    convertHistory(history, items, addHostName, convertPointCallback) {\n      /**\n       * Response should be in the format:\n       * data: [\n       *          {\n       *             target: \"Metric name\",\n       *             datapoints: [[<value>, <unixtime>], ...]\n       *          }, ...\n       *       ]\n       */\n\n      // Group history by itemid\n      var grouped_history = _.groupBy(history, 'itemid');\n      var hosts = _.indexBy(_.flatten(_.map(items, 'hosts')), 'hostid');\n\n      return _.map(grouped_history, function(hist, itemid) {\n        var item = _.find(items, {'itemid': itemid});\n        var alias = item.name;\n        if (_.keys(hosts).length > 1 || addHostName) {\n          var host = hosts[item.hostid];\n          alias = host.name + \": \" + alias;\n        }\n        return {\n          target: alias,\n          datapoints: _.map(hist, convertPointCallback)\n        };\n      });\n    }\n\n    handleHistory(history, items, addHostName) {\n      return this.convertHistory(history, items, addHostName, convertHistoryPoint);\n    }\n\n    handleTrends(history, items, addHostName, valueType) {\n      var convertPointCallback = _.partial(convertTrendPoint, valueType);\n      return this.convertHistory(history, items, addHostName, convertPointCallback);\n    }\n\n    handleSLAResponse(itservice, slaProperty, slaObject) {\n      var targetSLA = slaObject[itservice.serviceid].sla[0];\n      if (slaProperty.property === 'status') {\n        var targetStatus = parseInt(slaObject[itservice.serviceid].status);\n        return {\n          target: itservice.name + ' ' + slaProperty.name,\n          datapoints: [\n            [targetStatus, targetSLA.to * 1000]\n          ]\n        };\n      } else {\n        return {\n          target: itservice.name + ' ' + slaProperty.name,\n          datapoints: [\n            [targetSLA[slaProperty.property], targetSLA.from * 1000],\n            [targetSLA[slaProperty.property], targetSLA.to * 1000]\n          ]\n        };\n      }\n    }\n  }\n\n  return QueryProcessor;\n});\n\n/**\n * Find group, host, app or item by given name.\n * @param  list list of groups, apps or other\n * @param  name visible name\n * @return      array with finded element or undefined\n */\nfunction findByName(list, name) {\n  var finded = _.find(list, {'name': name});\n  if (finded) {\n    return [finded];\n  } else {\n    return undefined;\n  }\n}\n\n/**\n * Different hosts can contains applications and items with same name.\n * For this reason use _.filter, which return all elements instead _.find,\n * which return only first finded.\n * @param  {[type]} list list of elements\n * @param  {[type]} name app name\n * @return {[type]}      array with finded element or undefined\n */\nfunction filterByName(list, name) {\n  var finded = _.filter(list, {'name': name});\n  if (finded) {\n    return finded;\n  } else {\n    return undefined;\n  }\n}\n\nfunction findByRegex(list, regex) {\n  var filterPattern = utils.buildRegex(regex);\n  return _.filter(list, function (zbx_obj) {\n    return filterPattern.test(zbx_obj.name);\n  });\n}\n\nfunction findByFilter(list, filter) {\n  if (utils.isRegex(filter)) {\n    return findByRegex(list, filter);\n  } else {\n    return findByName(list, filter);\n  }\n}\n\nfunction getByFilter(list, filter) {\n  if (utils.isRegex(filter)) {\n    return findByRegex(list, filter);\n  } else {\n    return filterByName(list, filter);\n  }\n}\n\nfunction getFromIndex(index, objids) {\n  return _.map(objids, function(id) {\n    return index[id];\n  });\n}\n\nfunction convertHistoryPoint(point) {\n  // Value must be a number for properly work\n  return [\n    Number(point.value),\n    point.clock * 1000\n  ];\n}\n\nfunction convertTrendPoint(valueType, point) {\n  var value;\n  switch (valueType) {\n    case \"min\":\n      value = point.value_min;\n      break;\n    case \"max\":\n      value = point.value_max;\n      break;\n    case \"avg\":\n      value = point.value_avg;\n      break;\n    default:\n      value = point.value_avg;\n  }\n\n  return [\n    Number(value),\n    point.clock * 1000\n  ];\n}\n"]}