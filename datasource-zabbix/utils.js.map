{"version":3,"sources":["../../src/datasource-zabbix/utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["import _ from 'lodash';\nimport moment from 'moment';\n\n\n/**\n * Expand Zabbix item name\n *\n * @param  {string} name item name, ie \"CPU $2 time\"\n * @param  {string} key  item key, ie system.cpu.util[,system,avg1]\n * @return {string}      expanded name, ie \"CPU system time\"\n */\nexport function expandItemName(name, key) {\n\n  // extract params from key:\n  // \"system.cpu.util[,system,avg1]\" --> [\"\", \"system\", \"avg1\"]\n  var key_params = key.substring(key.indexOf('[') + 1, key.lastIndexOf(']')).split(',');\n\n  // replace item parameters\n  for (var i = key_params.length; i >= 1; i--) {\n    name = name.replace('$' + i, key_params[i - 1]);\n  }\n  return name;\n}\n\n// Pattern for testing regex\nexport var regexPattern = /^\\/(.*)\\/([gmi]*)$/m;\n\nexport function isRegex(str) {\n  return regexPattern.test(str);\n}\n\nexport function isTemplateVariable(str, templateVariables) {\n  var variablePattern = /^\\$\\w+/;\n  if (variablePattern.test(str)) {\n    var variables = _.map(templateVariables, variable => {\n      return '$' + variable.name;\n    });\n    return _.contains(variables, str);\n  } else {\n    return false;\n  }\n}\n\nexport function buildRegex(str) {\n  var matches = str.match(regexPattern);\n  var pattern = matches[1];\n  var flags = matches[2] !== \"\" ? matches[2] : undefined;\n  return new RegExp(pattern, flags);\n}\n\n// Need for template variables replace\n// From Grafana's templateSrv.js\nexport function escapeRegex(value) {\n  return value.replace(/[\\\\^$*+?.()|[\\]{}\\/]/g, '\\\\$&');\n}\n\nexport function parseInterval(interval) {\n  var intervalPattern = /(^[\\d]+)(y|M|w|d|h|m|s)/g;\n  var momentInterval = intervalPattern.exec(interval);\n  return moment.duration(Number(momentInterval[1]), momentInterval[2]).valueOf();\n}\n\n/**\n * Format acknowledges.\n *\n * @param  {array} acknowledges array of Zabbix acknowledge objects\n * @return {string} HTML-formatted table\n */\nexport function formatAcknowledges(acknowledges) {\n  if (acknowledges.length) {\n    var formatted_acknowledges = '<br><br>Acknowledges:<br><table><tr><td><b>Time</b></td>'\n      + '<td><b>User</b></td><td><b>Comments</b></td></tr>';\n    _.each(_.map(acknowledges, function (ack) {\n      var timestamp = moment.unix(ack.clock);\n      return '<tr><td><i>' + timestamp.format(\"DD MMM YYYY HH:mm:ss\") + '</i></td><td>' + ack.alias\n        + ' (' + ack.name + ' ' + ack.surname + ')' + '</td><td>' + ack.message + '</td></tr>';\n    }), function (ack) {\n      formatted_acknowledges = formatted_acknowledges.concat(ack);\n    });\n    formatted_acknowledges = formatted_acknowledges.concat('</table>');\n    return formatted_acknowledges;\n  } else {\n    return '';\n  }\n}\n\nexport function convertToZabbixAPIUrl(url) {\n  var zabbixAPIUrlPattern = /.*api_jsonrpc.php$/;\n  var trimSlashPattern = /(.*?)[\\/]*$/;\n  if (url.match(zabbixAPIUrlPattern)) {\n    return url;\n  } else {\n    return url.replace(trimSlashPattern, \"$1\");\n  }\n}\n"]}