{"version":3,"sources":["../../src/datasource-zabbix/zabbixAPI.service.js"],"names":[],"mappings":"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","file":"zabbixAPI.service.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\nimport * as utils from './utils';\nimport './zabbixAPICore.service';\n\n/** @ngInject */\nfunction ZabbixAPIService($q, alertSrv, zabbixAPICoreService) {\n\n  /**\n   * Zabbix API Wrapper.\n   * Creates Zabbix API instance with given parameters (url, credentials and other).\n   * Wraps API calls and provides high-level methods.\n   */\n  class ZabbixAPI {\n\n    constructor(api_url, username, password, basicAuth, withCredentials) {\n      this.url              = api_url;\n      this.username         = username;\n      this.password         = password;\n      this.auth             = \"\";\n\n      this.requestOptions = {\n        basicAuth: basicAuth,\n        withCredentials: withCredentials\n      };\n\n      this.loginPromise = null;\n\n      this.$q = $q;\n      this.alertSrv = alertSrv;\n      this.zabbixAPICore = zabbixAPICoreService;\n\n      this.getTrend = this.getTrend_ZBXNEXT1193;\n      //getTrend = getTrend_30;\n    }\n\n    //////////////////////////\n    // Core method wrappers //\n    //////////////////////////\n\n    request(method, params) {\n      var self = this;\n\n      return this.zabbixAPICore.request(this.url, method, params, this.requestOptions, this.auth)\n        .then(function(result) {\n          return result;\n        },\n        // Handle API errors\n        function(error) {\n          if (isNotAuthorized(error.data)) {\n            return self.loginOnce().then(\n              function() {\n                return self.request(method, params);\n              },\n              // Handle user.login method errors\n              function(error) {\n                self.alertAPIError(error.data);\n              });\n          }\n        });\n    }\n\n    alertAPIError(message) {\n      this.alertSrv.set(\n        \"Zabbix API Error\",\n        message,\n        'error'\n      );\n    }\n\n    /**\n     * When API unauthenticated or auth token expired each request produce login()\n     * call. But auth token is common to all requests. This function wraps login() method\n     * and call it once. If login() already called just wait for it (return its promise).\n     * @return login promise\n     */\n    loginOnce() {\n      var self = this;\n      var deferred  = this.$q.defer();\n      if (!self.loginPromise) {\n        self.loginPromise = deferred.promise;\n        self.login().then(\n          function(auth) {\n            self.loginPromise = null;\n            self.auth = auth;\n            deferred.resolve(auth);\n          },\n          function(error) {\n            self.loginPromise = null;\n            deferred.reject(error);\n          }\n        );\n      } else {\n        return self.loginPromise;\n      }\n      return deferred.promise;\n    }\n\n    /**\n     * Get authentication token.\n     */\n    login() {\n      return this.zabbixAPICore.login(this.url, this.username, this.password, this.requestOptions);\n    }\n\n    /**\n     * Get Zabbix API version\n     */\n    getVersion() {\n      return this.zabbixAPICore.getVersion(this.url, this.requestOptions);\n    }\n\n    ////////////////////////////////\n    // Zabbix API method wrappers //\n    ////////////////////////////////\n\n    getGroups() {\n      var params = {\n        output: ['name'],\n        sortfield: 'name',\n        real_hosts: true\n      };\n\n      return this.request('hostgroup.get', params);\n    }\n\n    getHosts(groupids) {\n      var params = {\n        output: ['name', 'host'],\n        sortfield: 'name'\n      };\n      if (groupids) {\n        params.groupids = groupids;\n      }\n\n      return this.request('host.get', params);\n    }\n\n    getApps(hostids) {\n      var params = {\n        output: ['applicationid', 'name'],\n        hostids: hostids\n      };\n\n      return this.request('application.get', params);\n    }\n\n    /**\n     * Get Zabbix items\n     * @param  {[type]} hostids  host ids\n     * @param  {[type]} appids   application ids\n     * @param  {String} itemtype 'num' or 'text'\n     * @return {[type]}          array of items\n     */\n    getItems(hostids, appids, itemtype) {\n      var params = {\n        output: [\n          'name', 'key_',\n          'value_type',\n          'hostid',\n          'status',\n          'state'\n        ],\n        sortfield: 'name',\n        webitems: true,\n        filter: {},\n        selectHosts: [\n          'hostid',\n          'name'\n        ]\n      };\n      if (hostids) {\n        params.hostids = hostids;\n      }\n      if (appids) {\n        params.applicationids = appids;\n      }\n      if (itemtype === 'num') {\n        // Return only numeric metrics\n        params.filter.value_type = [0, 3];\n      }\n      if (itemtype === 'text') {\n        // Return only text metrics\n        params.filter.value_type = [1, 2, 4];\n      }\n\n      return this.request('item.get', params)\n        .then(items => {\n          return _.forEach(items, item => {\n            item.item = item.name;\n            item.name = utils.expandItemName(item.item, item.key_);\n            return item;\n          });\n        });\n    }\n\n    getLastValue(itemid) {\n      var params = {\n        output: ['lastvalue'],\n        itemids: itemid\n      };\n      return this.request('item.get', params).then(function(items) {\n        if (items.length) {\n          return items[0].lastvalue;\n        } else {\n          return null;\n        }\n      });\n    }\n\n    /**\n     * Perform history query from Zabbix API\n     *\n     * @param  {Array}  items       Array of Zabbix item objects\n     * @param  {Number} time_from   Time in seconds\n     * @param  {Number} time_till   Time in seconds\n     * @return {Array}  Array of Zabbix history objects\n     */\n    getHistory(items, time_from, time_till) {\n      var self = this;\n\n      // Group items by value type\n      var grouped_items = _.groupBy(items, 'value_type');\n\n      // Perform request for each value type\n      return this.$q.all(_.map(grouped_items, function (items, value_type) {\n        var itemids = _.map(items, 'itemid');\n        var params = {\n          output: 'extend',\n          history: value_type,\n          itemids: itemids,\n          sortfield: 'clock',\n          sortorder: 'ASC',\n          time_from: time_from\n        };\n\n        // Relative queries (e.g. last hour) don't include an end time\n        if (time_till) {\n          params.time_till = time_till;\n        }\n\n        return self.request('history.get', params);\n      })).then(_.flatten);\n    }\n\n    /**\n     * Perform trends query from Zabbix API\n     * Use trends api extension from ZBXNEXT-1193 patch.\n     *\n     * @param  {Array}  items       Array of Zabbix item objects\n     * @param  {Number} time_from   Time in seconds\n     * @param  {Number} time_till   Time in seconds\n     * @return {Array}  Array of Zabbix trend objects\n     */\n    getTrend_ZBXNEXT1193(items, time_from, time_till) {\n      var self = this;\n\n      // Group items by value type\n      var grouped_items = _.groupBy(items, 'value_type');\n\n      // Perform request for each value type\n      return this.$q.all(_.map(grouped_items, function (items, value_type) {\n        var itemids = _.map(items, 'itemid');\n        var params = {\n          output: 'extend',\n          trend: value_type,\n          itemids: itemids,\n          sortfield: 'clock',\n          sortorder: 'ASC',\n          time_from: time_from\n        };\n\n        // Relative queries (e.g. last hour) don't include an end time\n        if (time_till) {\n          params.time_till = time_till;\n        }\n\n        return self.request('trend.get', params);\n      })).then(_.flatten);\n    }\n\n    getTrend_30(items, time_from, time_till, value_type) {\n      var self = this;\n      var itemids = _.map(items, 'itemid');\n\n      var params = {\n        output: [\"itemid\",\n          \"clock\",\n          value_type\n        ],\n        itemids: itemids,\n        time_from: time_from\n      };\n\n      // Relative queries (e.g. last hour) don't include an end time\n      if (time_till) {\n        params.time_till = time_till;\n      }\n\n      return self.request('trend.get', params);\n    }\n\n    getITService(/* optional */ serviceids) {\n      var params = {\n        output: 'extend',\n        serviceids: serviceids\n      };\n      return this.request('service.get', params);\n    }\n\n    getSLA(serviceids, from, to) {\n      var params = {\n        serviceids: serviceids,\n        intervals: [{\n          from: from,\n          to: to\n        }]\n      };\n      return this.request('service.getsla', params);\n    }\n\n    getTriggers(groupids, hostids, applicationids, showTriggers, timeFrom, timeTo) {\n      var params = {\n        output: 'extend',\n        groupids: groupids,\n        hostids: hostids,\n        applicationids: applicationids,\n        expandDescription: true,\n        expandData: true,\n        monitored: true,\n        skipDependent: true,\n        //only_true: true,\n        filter: {\n          value: 1\n        },\n        selectGroups: ['name'],\n        selectHosts: ['name', 'host'],\n        selectItems: ['name', 'key_', 'lastvalue'],\n        selectLastEvent: 'extend'\n      };\n\n      if (showTriggers) {\n        params.filter.value = showTriggers;\n      }\n\n      if (timeFrom || timeTo) {\n        params.lastChangeSince = timeFrom;\n        params.lastChangeTill = timeTo;\n      }\n\n      return this.request('trigger.get', params);\n    }\n\n    getEvents(objectids, from, to, showEvents) {\n      var params = {\n        output: 'extend',\n        time_from: from,\n        time_till: to,\n        objectids: objectids,\n        select_acknowledges: 'extend',\n        selectHosts: 'extend',\n        value: showEvents\n      };\n\n      return this.request('event.get', params);\n    }\n\n    getAcknowledges(eventids) {\n      var params = {\n        output: 'extend',\n        eventids: eventids,\n        preservekeys: true,\n        select_acknowledges: 'extend',\n        sortfield: 'clock',\n        sortorder: 'DESC'\n      };\n\n      return this.request('event.get', params)\n        .then(function (events) {\n          return _.filter(events, function(event) {\n            return event.acknowledges.length;\n          });\n        });\n    }\n\n  }\n\n  return ZabbixAPI;\n}\n\nfunction isNotAuthorized(message) {\n  return (\n    message === \"Session terminated, re-login, please.\" ||\n    message === \"Not authorised.\" ||\n    message === \"Not authorized.\"\n  );\n}\n\nangular\n  .module('grafana.services')\n  .factory('zabbixAPIService', ZabbixAPIService);\n"]}