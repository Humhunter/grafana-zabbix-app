{"version":3,"sources":["../../src/datasource-zabbix/zabbixCache.service.js"],"names":[],"mappings":"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","file":"zabbixCache.service.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\n\n// Use factory() instead service() for multiple datasources support.\n// Each datasource instance must initialize its own cache.\n\n/** @ngInject */\nangular.module('grafana.services').factory('ZabbixCachingProxy', function($q, $interval) {\n\n  class ZabbixCachingProxy {\n    constructor(zabbixAPI, ttl) {\n      this.zabbixAPI = zabbixAPI;\n      this.ttl = ttl;\n\n      this.$q = $q;\n\n      // Internal objects for data storing\n      this._groups        = undefined;\n      this._hosts         = undefined;\n      this._applications  = undefined;\n      this._items         = undefined;\n      this.storage = {\n        history: {},\n        trends: {}\n      };\n\n      // Check is a service initialized or not\n      this._initialized = undefined;\n\n      this.refreshPromise = false;\n      this.historyPromises = {};\n\n      // Wrap _refresh() method to call it once.\n      this.refresh = callOnce(this._refresh, this.refreshPromise);\n\n      // Update cache periodically\n      $interval(_.bind(this.refresh, this), this.ttl);\n\n      // Don't run duplicated history requests\n      this.getHistory = callHistoryOnce(_.bind(this.zabbixAPI.getHistory, this.zabbixAPI),\n                                        this.historyPromises);\n\n      // Don't run duplicated requests\n      this.groupPromises = {};\n      this.getGroupsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getGroups, this.zabbixAPI),\n                                              this.groupPromises);\n\n      this.hostPromises = {};\n      this.getHostsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getHosts, this.zabbixAPI),\n                                             this.hostPromises);\n\n      this.appPromises = {};\n      this.getAppsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getApps, this.zabbixAPI),\n                                            this.appPromises);\n\n      this.itemPromises = {};\n      this.getItemsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getItems, this.zabbixAPI),\n                                             this.itemPromises);\n    }\n\n    _refresh() {\n      var self = this;\n      var promises = [\n        this.zabbixAPI.getGroups()\n      ];\n\n      return this.$q.all(promises).then(function(results) {\n        if (results.length) {\n          self._groups = results[0];\n        }\n        self._initialized = true;\n      });\n    }\n\n    getGroups() {\n      var self = this;\n      if (this._groups) {\n        return this.$q.when(self._groups);\n      } else {\n        return this.getGroupsOnce()\n          .then(groups => {\n            self._groups = groups;\n            return self._groups;\n          });\n      }\n    }\n\n    getHosts(groupids) {\n      //var self = this;\n      return this.getHostsOnce(groupids)\n        .then(hosts => {\n          // iss #196 - disable caching due performance issues\n          //self._hosts = _.union(self._hosts, hosts);\n          return hosts;\n        });\n    }\n\n    getApps(hostids) {\n      return this.getAppsOnce(hostids)\n        .then(apps => {\n          return apps;\n        });\n    }\n\n    getItems(hostids, appids, itemtype) {\n      //var self = this;\n      return this.getItemsOnce(hostids, appids, itemtype)\n        .then(items => {\n          // iss #196 - disable caching due performance issues\n          //self._items = _.union(self._items, items);\n          return items;\n        });\n    }\n\n    getHistoryFromCache(items, time_from, time_till) {\n      var deferred  = this.$q.defer();\n      var historyStorage = this.storage.history;\n      var full_history;\n      var expired = _.filter(_.groupBy(items, 'itemid'), function(item, itemid) {\n        return !historyStorage[itemid];\n      });\n      if (expired.length) {\n        this.zabbixAPI.getHistory(expired, time_from, time_till).then(function(history) {\n          var grouped_history = _.groupBy(history, 'itemid');\n          _.forEach(expired, function(item) {\n            var itemid = item.itemid;\n            historyStorage[itemid] = item;\n            historyStorage[itemid].time_from = time_from;\n            historyStorage[itemid].time_till = time_till;\n            historyStorage[itemid].history = grouped_history[itemid];\n          });\n          full_history = _.map(items, function(item) {\n            return historyStorage[item.itemid].history;\n          });\n          deferred.resolve(_.flatten(full_history, true));\n        });\n      } else {\n        full_history = _.map(items, function(item) {\n          return historyStorage[item.itemid].history;\n        });\n        deferred.resolve(_.flatten(full_history, true));\n      }\n      return deferred.promise;\n    }\n\n    getHistoryFromAPI(items, time_from, time_till) {\n      return this.zabbixAPI.getHistory(items, time_from, time_till);\n    }\n\n    getHost(hostid) {\n      return _.find(this._hosts, {'hostid': hostid});\n    }\n\n    getItem(itemid) {\n      return _.find(this._items, {'itemid': itemid});\n    }\n  }\n\n  function callAPIRequestOnce(func, promiseKeeper) {\n    return function() {\n      var hash = getAPIRequestHash(arguments);\n      var deferred  = $q.defer();\n      if (!promiseKeeper[hash]) {\n        promiseKeeper[hash] = deferred.promise;\n        func.apply(this, arguments).then(function(result) {\n          deferred.resolve(result);\n          promiseKeeper[hash] = null;\n        });\n      } else {\n        return promiseKeeper[hash];\n      }\n      return deferred.promise;\n    };\n  }\n\n  function callHistoryOnce(func, promiseKeeper) {\n    return function() {\n      var itemids = _.map(arguments[0], 'itemid');\n      var stamp = itemids.join() + arguments[1] + arguments[2];\n      var hash = stamp.getHash();\n\n      var deferred  = $q.defer();\n      if (!promiseKeeper[hash]) {\n        promiseKeeper[hash] = deferred.promise;\n        func.apply(this, arguments).then(function(result) {\n          deferred.resolve(result);\n          promiseKeeper[hash] = null;\n        });\n      } else {\n        return promiseKeeper[hash];\n      }\n      return deferred.promise;\n    };\n  }\n\n  function callOnce(func, promiseKeeper) {\n    return function() {\n      var deferred  = $q.defer();\n      if (!promiseKeeper) {\n        promiseKeeper = deferred.promise;\n        func.apply(this, arguments).then(function(result) {\n          deferred.resolve(result);\n          promiseKeeper = null;\n        });\n      } else {\n        return promiseKeeper;\n      }\n      return deferred.promise;\n    };\n  }\n\n  return ZabbixCachingProxy;\n});\n\nfunction getAPIRequestHash(args) {\n  var requestStamp = _.map(args, arg => {\n    if (arg === undefined) {\n      return 'undefined';\n    } else {\n      return arg.toString();\n    }\n  }).join();\n  return requestStamp.getHash();\n}\n\nString.prototype.getHash = function() {\n  var hash = 0, i, chr, len;\n  if (this.length === 0) {\n    return hash;\n  }\n  for (i = 0, len = this.length; i < len; i++) {\n    chr   = this.charCodeAt(i);\n    hash  = ((hash << 5) - hash) + chr;\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash;\n};\n"]}