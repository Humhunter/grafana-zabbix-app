{"version":3,"sources":["../../src/datasource-zabbix/zabbixCachingProxy.service.js"],"names":[],"mappings":"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","file":"zabbixCachingProxy.service.js","sourcesContent":["import angular from 'angular';\nimport _ from 'lodash';\n\n// Use factory() instead service() for multiple datasources support.\n// Each datasource instance must initialize its own cache.\n\n/** @ngInject */\nfunction ZabbixCachingProxyFactory() {\n\n  class ZabbixCachingProxy {\n    constructor(zabbixAPI, cacheOptions) {\n      this.zabbixAPI = zabbixAPI;\n      this.cacheEnabled = cacheOptions.enabled;\n      this.ttl          = cacheOptions.ttl || 600000; // 10 minutes by default\n\n      // Internal objects for data storing\n      this.cache = {\n        groups: {},\n        hosts: {},\n        applications: {},\n        items: {},\n        history: {},\n        trends: {}\n      };\n\n      this.historyPromises = {};\n\n      // Don't run duplicated history requests\n      this.getHistory = callAPIRequestOnce(_.bind(this.zabbixAPI.getHistory, this.zabbixAPI),\n                                           this.historyPromises, getHistoryRequestHash);\n\n      // Don't run duplicated requests\n      this.groupPromises = {};\n      this.getGroupsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getGroups, this.zabbixAPI),\n                                              this.groupPromises, getRequestHash);\n\n      this.hostPromises = {};\n      this.getHostsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getHosts, this.zabbixAPI),\n                                             this.hostPromises, getRequestHash);\n\n      this.appPromises = {};\n      this.getAppsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getApps, this.zabbixAPI),\n                                            this.appPromises, getRequestHash);\n\n      this.itemPromises = {};\n      this.getItemsOnce = callAPIRequestOnce(_.bind(this.zabbixAPI.getItems, this.zabbixAPI),\n                                             this.itemPromises, getRequestHash);\n    }\n\n    isExpired(cacheObject) {\n      if (cacheObject) {\n        let object_age = Date.now() - cacheObject.timestamp;\n        return !(cacheObject.timestamp && object_age < this.ttl);\n      } else {\n        return true;\n      }\n    }\n\n    /**\n     * Check that result is present in cache and up to date\n     * or send request to API.\n     */\n    proxyRequest(request, params, cacheObject) {\n      let hash = getRequestHash(params);\n      if (this.cacheEnabled && !this.isExpired(cacheObject[hash])) {\n        return Promise.resolve(cacheObject[hash].value);\n      } else {\n        return request(...params)\n        .then(result => {\n          cacheObject[hash] = {\n            value: result,\n            timestamp: Date.now()\n          };\n          return result;\n        });\n      }\n    }\n\n    getGroups() {\n      return this.proxyRequest(this.getGroupsOnce, [], this.cache.groups);\n    }\n\n    getHosts(groupids) {\n      return this.proxyRequest(this.getHostsOnce, [groupids], this.cache.hosts);\n    }\n\n    getApps(hostids) {\n      return this.proxyRequest(this.getAppsOnce, [hostids], this.cache.applications);\n    }\n\n    getItems(hostids, appids, itemtype) {\n      let params = [hostids, appids, itemtype];\n      return this.proxyRequest(this.getItemsOnce, params, this.cache.items);\n    }\n\n    getHistoryFromCache(items, time_from, time_till) {\n      var historyStorage = this.cache.history;\n      var full_history;\n      var expired = _.filter(_.keyBy(items, 'itemid'), (item, itemid) => {\n        return !historyStorage[itemid];\n      });\n      if (expired.length) {\n        return this.zabbixAPI.getHistory(expired, time_from, time_till).then(function(history) {\n          var grouped_history = _.groupBy(history, 'itemid');\n          _.forEach(expired, item => {\n            var itemid = item.itemid;\n            historyStorage[itemid] = item;\n            historyStorage[itemid].time_from = time_from;\n            historyStorage[itemid].time_till = time_till;\n            historyStorage[itemid].history = grouped_history[itemid];\n          });\n          full_history = _.map(items, item => {\n            return historyStorage[item.itemid].history;\n          });\n          return _.flatten(full_history, true);\n        });\n      } else {\n        full_history = _.map(items, function(item) {\n          return historyStorage[item.itemid].history;\n        });\n        return Promise.resolve(_.flatten(full_history, true));\n      }\n    }\n\n    getHistoryFromAPI(items, time_from, time_till) {\n      return this.zabbixAPI.getHistory(items, time_from, time_till);\n    }\n  }\n\n  return ZabbixCachingProxy;\n}\n\nangular\n  .module('grafana.services')\n  .factory('ZabbixCachingProxy', ZabbixCachingProxyFactory);\n\n/**\n * Wrap zabbix API request to prevent multiple calls\n * with same params when waiting for result.\n */\nfunction callAPIRequestOnce(func, promiseKeeper, argsHashFunc) {\n  return function() {\n    var hash = argsHashFunc(arguments);\n    if (!promiseKeeper[hash]) {\n      promiseKeeper[hash] = Promise.resolve(\n        func.apply(this, arguments)\n        .then(result => {\n          promiseKeeper[hash] = null;\n          return result;\n        })\n      );\n    }\n    return promiseKeeper[hash];\n  };\n}\n\nfunction getRequestHash(args) {\n  var requestStamp = _.map(args, arg => {\n    if (arg === undefined) {\n      return 'undefined';\n    } else {\n      if (_.isArray(arg)) {\n        return arg.sort().toString();\n      } else {\n        return arg.toString();\n      }\n    }\n  }).join();\n  return requestStamp.getHash();\n}\n\nfunction getHistoryRequestHash(args) {\n  let itemids = _.map(args[0], 'itemid');\n  let stamp = itemids.join() + args[1] + args[2];\n  return stamp.getHash();\n}\n\nString.prototype.getHash = function() {\n  var hash = 0, i, chr, len;\n  if (this.length !== 0) {\n    for (i = 0, len = this.length; i < len; i++) {\n      chr   = this.charCodeAt(i);\n      hash  = ((hash << 5) - hash) + chr;\n      hash |= 0; // Convert to 32bit integer\n    }\n  }\n  return hash;\n};\n\n// Fix for backward compatibility with lodash 2.4\nif (!_.keyBy) {_.keyBy = _.indexBy;}\n"]}