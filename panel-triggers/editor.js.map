{"version":3,"sources":["../../src/panel-triggers/editor.js"],"names":[],"mappings":"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","file":"editor.js","sourcesContent":["/**\n * Grafana-Zabbix\n * Zabbix plugin for Grafana.\n * http://github.com/alexanderzobnin/grafana-zabbix\n *\n * Trigger panel.\n * This feature sponsored by CORE IT\n * http://www.coreit.fr\n *\n * Copyright 2015 Alexander Zobnin alexanderzobnin@gmail.com\n * Licensed under the Apache License, Version 2.0\n */\n\nimport _ from 'lodash';\nimport * as utils from '../datasource-zabbix/utils';\n\nimport '../datasource-zabbix/css/query-editor.css!';\n\nclass TriggerPanelEditorCtrl {\n\n  /** @ngInject */\n  constructor($scope, $rootScope, $q, uiSegmentSrv, datasourceSrv, templateSrv, popoverSrv) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n\n    this.$q = $q;\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.popoverSrv = popoverSrv;\n\n    // Map functions for bs-typeahead\n    this.getGroupNames = _.partial(getMetricNames, this, 'groupList');\n    this.getHostNames = _.partial(getMetricNames, this, 'hostList');\n    this.getApplicationNames = _.partial(getMetricNames, this, 'appList');\n\n    // Update metric suggestion when template variable was changed\n    $rootScope.$on('template-variable-value-updated', () => this.onVariableChange());\n\n    this.ackFilters = [\n      'all triggers',\n      'unacknowledged',\n      'acknowledged'\n    ];\n\n    this.sortByFields = [\n      { text: 'last change',  value: 'lastchange' },\n      { text: 'severity',     value: 'priority' }\n    ];\n\n    this.showEventsFields = [\n      { text: 'All',     value: [0,1] },\n      { text: 'OK',      value: [0] },\n      { text: 'Problems', value: 1 }\n    ];\n\n    // Load scope defaults\n    var scopeDefaults = {\n      metric: {},\n      inputStyles: {},\n      oldTarget: _.cloneDeep(this.panel.triggers)\n    };\n    _.defaults(this, scopeDefaults);\n\n    var self = this;\n\n    // Get zabbix data sources\n    var datasources = _.filter(this.datasourceSrv.getMetricSources(), datasource => {\n      return datasource.meta.id === 'alexanderzobnin-zabbix-datasource';\n    });\n    this.datasources = _.map(datasources, 'name');\n\n    // Set default datasource\n    if (!this.panel.datasource) {\n      this.panel.datasource = this.datasources[0];\n    }\n    // Load datasource\n    this.datasourceSrv.get(this.panel.datasource).then(function (datasource) {\n      self.datasource = datasource;\n      self.initFilters();\n      self.panelCtrl.refresh();\n    });\n  }\n\n  initFilters() {\n    var self = this;\n    return this.$q\n      .when(this.suggestGroups())\n      .then(() => {return self.suggestHosts();})\n      .then(() => {return self.suggestApps();});\n  }\n\n  suggestGroups() {\n    var self = this;\n    return this.datasource.zabbixCache\n      .getGroups()\n      .then(groups => {\n        self.metric.groupList = groups;\n        return groups;\n      });\n  }\n\n  suggestHosts() {\n    var self = this;\n    var groupFilter = this.datasource.replaceTemplateVars(this.panel.triggers.group.filter);\n    return this.datasource.queryProcessor\n      .filterGroups(self.metric.groupList, groupFilter)\n      .then(groups => {\n        var groupids = _.map(groups, 'groupid');\n        return self.datasource.zabbixAPI\n          .getHosts(groupids)\n          .then(hosts => {\n            self.metric.hostList = hosts;\n            return hosts;\n          });\n      });\n  }\n\n  suggestApps() {\n    var self = this;\n    var hostFilter = this.datasource.replaceTemplateVars(this.panel.triggers.host.filter);\n    return this.datasource.queryProcessor\n      .filterHosts(self.metric.hostList, hostFilter)\n      .then(hosts => {\n        var hostids = _.map(hosts, 'hostid');\n        return self.datasource.zabbixAPI\n          .getApps(hostids)\n          .then(apps => {\n            return self.metric.appList = apps;\n          });\n      });\n  }\n\n  onVariableChange() {\n    if (this.isContainsVariables()) {\n      this.targetChanged();\n    }\n  }\n\n  /**\n   * Check query for template variables\n   */\n  isContainsVariables() {\n    var self = this;\n    return _.some(self.templateSrv.variables, variable => {\n      return _.some(['group', 'host', 'application'], field => {\n        return self.templateSrv.containsVariable(self.panel.triggers[field].filter, variable.name);\n      });\n    });\n  }\n\n  targetChanged() {\n    this.initFilters();\n    this.panelCtrl.refresh();\n  }\n\n  parseTarget() {\n    this.initFilters();\n    var newTarget = _.cloneDeep(this.panel.triggers);\n    if (!_.isEqual(this.oldTarget, this.panel.triggers)) {\n      this.oldTarget = newTarget;\n      this.panelCtrl.refresh();\n    }\n  }\n\n  refreshTriggerSeverity() {\n    _.each(this.triggerList, function(trigger) {\n      trigger.color = this.panel.triggerSeverity[trigger.priority].color;\n      trigger.severity = this.panel.triggerSeverity[trigger.priority].severity;\n    });\n    this.panelCtrl.refresh();\n  }\n\n  datasourceChanged() {\n    this.panelCtrl.refresh();\n  }\n\n  changeTriggerSeverityColor(trigger, color) {\n    this.panel.triggerSeverity[trigger.priority].color = color;\n    this.refreshTriggerSeverity();\n  }\n\n  isRegex(str) {\n    return utils.isRegex(str);\n  }\n\n  isVariable(str) {\n    return utils.isTemplateVariable(str, this.templateSrv.variables);\n  }\n}\n\n// Get list of metric names for bs-typeahead directive\nfunction getMetricNames(scope, metricList) {\n  return _.uniq(_.map(scope.metric[metricList], 'name'));\n}\n\nexport function triggerPanelEditor() {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/editor.html',\n    controller: TriggerPanelEditorCtrl,\n  };\n}\n"]}