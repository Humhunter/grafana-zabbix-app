{"version":3,"sources":["../../src/panel-triggers/editor.js"],"names":[],"mappings":"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","file":"editor.js","sourcesContent":["/**\n * Grafana-Zabbix\n * Zabbix plugin for Grafana.\n * http://github.com/alexanderzobnin/grafana-zabbix\n *\n * Trigger panel.\n * This feature sponsored by CORE IT\n * http://www.coreit.fr\n *\n * Copyright 2015 Alexander Zobnin alexanderzobnin@gmail.com\n * Licensed under the Apache License, Version 2.0\n */\n\nimport _ from 'lodash';\nimport $ from 'jquery';\n\nclass TriggerPanelEditorCtrl{\n\n  /** @ngInject */\n  constructor($scope, $q, uiSegmentSrv, datasourceSrv, templateSrv, popoverSrv) {\n    $scope.editor = this;\n    this.panelCtrl = $scope.ctrl;\n    this.panel = this.panelCtrl.panel;\n\n    this.datasourceSrv = datasourceSrv;\n    this.templateSrv = templateSrv;\n    this.popoverSrv = popoverSrv;\n\n    // Map functions for bs-typeahead\n    this.getGroupNames = _.partial(getMetricNames, this, 'groupList');\n    this.getHostNames = _.partial(getMetricNames, this, 'filteredHosts');\n    this.getApplicationNames = _.partial(getMetricNames, this, 'filteredApplications');\n    this.getItemNames = _.partial(getMetricNames, this, 'filteredItems');\n\n    this.ackFilters = [\n      'all triggers',\n      'unacknowledged',\n      'acknowledged'\n    ];\n\n    this.sortByFields = [\n      { text: 'last change',  value: 'lastchange' },\n      { text: 'severity',     value: 'priority' }\n    ];\n\n    this.showEventsFields = [\n      { text: 'All',     value: [0,1] },\n      { text: 'OK',      value: [0] },\n      { text: 'Problems', value: 1 }\n    ];\n\n    // Load scope defaults\n    var scopeDefaults = {\n      metric: {},\n      inputStyles: {},\n      oldTarget: _.cloneDeep(this.panel.triggers)\n    };\n    _.defaults(this, scopeDefaults);\n\n    var self = this;\n\n    // Get zabbix data sources\n    var datasources = _.filter(this.datasourceSrv.getMetricSources(), datasource => {\n      return datasource.meta.id === 'alexanderzobnin-zabbix-datasource';\n    });\n    this.datasources = _.map(datasources, 'name');\n\n    // Set default datasource\n    if (!this.panel.datasource) {\n      this.panel.datasource = this.datasources[0];\n    }\n    // Load datasource\n    this.datasourceSrv.get(this.panel.datasource).then(function (datasource) {\n      self.datasource = datasource;\n      self.initFilters();\n      self.panelCtrl.refresh();\n    });\n  }\n\n  initFilters() {\n    this.filterGroups();\n    this.filterHosts();\n    this.filterApplications();\n  }\n\n  filterGroups() {\n    var self = this;\n    this.datasource.queryProcessor.getGroups().then(function(groups) {\n      self.metric.groupList = groups;\n    });\n  }\n\n  filterHosts() {\n    var self = this;\n    var groupFilter = this.templateSrv.replace(this.panel.triggers.group.filter);\n    this.datasource.queryProcessor.getHosts(groupFilter).then(function(hosts) {\n      self.metric.filteredHosts = hosts;\n    });\n  }\n\n  filterApplications() {\n    var self = this;\n    var groupFilter = this.templateSrv.replace(this.panel.triggers.group.filter);\n    var hostFilter = this.templateSrv.replace(this.panel.triggers.host.filter);\n    this.datasource.queryProcessor.getApps(groupFilter, hostFilter)\n      .then(function(apps) {\n        self.metric.filteredApplications = apps;\n      });\n  }\n\n  onTargetPartChange(targetPart) {\n    var regexStyle = {'color': '#CCA300'};\n    targetPart.isRegex = isRegex(targetPart.filter);\n    targetPart.style = targetPart.isRegex ? regexStyle : {};\n  }\n\n  parseTarget() {\n    this.initFilters();\n    var newTarget = _.cloneDeep(this.panel.triggers);\n    if (!_.isEqual(this.oldTarget, this.panel.triggers)) {\n      this.oldTarget = newTarget;\n      this.panelCtrl.refresh();\n    }\n  }\n\n  refreshTriggerSeverity() {\n    _.each(this.triggerList, function(trigger) {\n      trigger.color = this.panel.triggerSeverity[trigger.priority].color;\n      trigger.severity = this.panel.triggerSeverity[trigger.priority].severity;\n    });\n    this.panelCtrl.refresh();\n  }\n\n  datasourceChanged() {\n    this.panelCtrl.refresh();\n  }\n\n  changeTriggerSeverityColor(trigger, color) {\n    this.panel.triggerSeverity[trigger.priority].color = color;\n    this.refreshTriggerSeverity();\n  }\n\n  openTriggerColorSelector(event) {\n    var el = $(event.currentTarget);\n    var index = getTriggerIndexForElement(el);\n    var popoverScope = this.$new();\n    popoverScope.trigger = this.panel.triggerSeverity[index];\n    popoverScope.changeTriggerSeverityColor = this.changeTriggerSeverityColor;\n\n    this.popoverSrv.show({\n      element: el,\n      placement: 'top',\n      templateUrl:  'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/trigger.colorpicker.html',\n      scope: popoverScope\n    });\n  }\n\n  openOkEventColorSelector(event) {\n    var el = $(event.currentTarget);\n    var popoverScope = this.$new();\n    popoverScope.trigger = {color: this.panel.okEventColor};\n    popoverScope.changeTriggerSeverityColor = function(trigger, color) {\n      this.panel.okEventColor = color;\n      this.refreshTriggerSeverity();\n    };\n\n    this.popoverSrv.show({\n      element: el,\n      placement: 'top',\n      templateUrl:  'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/trigger.colorpicker.html',\n      scope: popoverScope\n    });\n  }\n}\n\n// Get list of metric names for bs-typeahead directive\nfunction getMetricNames(scope, metricList) {\n  return _.uniq(_.map(scope.metric[metricList], 'name'));\n}\n\nfunction getTriggerIndexForElement(el) {\n  return el.parents('[data-trigger-index]').data('trigger-index');\n}\n\nfunction isRegex(str) {\n  // Pattern for testing regex\n  var regexPattern = /^\\/(.*)\\/([gmi]*)$/m;\n  return regexPattern.test(str);\n}\n\nexport function triggerPanelEditor() {\n  return {\n    restrict: 'E',\n    scope: true,\n    templateUrl: 'public/plugins/alexanderzobnin-zabbix-app/panel-triggers/editor.html',\n    controller: TriggerPanelEditorCtrl,\n  };\n}\n"]}